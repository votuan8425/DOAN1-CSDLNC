/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package KHACHHANG;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author PC
 */
public class DS_Tour extends javax.swing.JFrame {

    DefaultTableModel tblModel = new DefaultTableModel();

    public DS_Tour() {
        initComponents();
        setLocationRelativeTo(null);
        show_SP();
    }

    public void show_SP() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
            System.out.println("Connected to the database");
            String query = "select * from DS_TOUR";
            PreparedStatement pst = con.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tblmodel = (DefaultTableModel) tblDS.getModel();
            while (rs.next()) {
                tblmodel.addRow(new String[]{rs.getString(1), rs.getString(2), String.valueOf(rs.getInt(3))});
            }
        } catch (Exception E) {
            System.out.println("Connection failed");
            E.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_MT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_sl = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_timkiem = new javax.swing.JTextField();
        find_DSTOUR = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_lichtrinh = new javax.swing.JTable();
        txt_lichtrinh = new javax.swing.JTextField();
        find_LICHTRINH = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_gia1 = new javax.swing.JTextField();
        txt_gia2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_cttour = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ TOUR", "TÊN TOUR", "GIÁ"
            }
        ));
        jScrollPane1.setViewportView(tblDS);

        jLabel1.setText("Danh sách Tour");

        jLabel2.setText("Nhập mã Tour");

        jButton1.setText("ĐẶT TOUR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("So luong");

        txt_sl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_slKeyTyped(evt);
            }
        });

        jButton2.setText("QUAY LAI");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nhap tour tim kiem");

        find_DSTOUR.setText("Tim kiem");
        find_DSTOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_DSTOURActionPerformed(evt);
            }
        });

        jLabel5.setText("Xem lich trinh cua tour");

        tbl_lichtrinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MA TOUR", "LICH TRINH"
            }
        ));
        jScrollPane2.setViewportView(tbl_lichtrinh);
        if (tbl_lichtrinh.getColumnModel().getColumnCount() > 0) {
            tbl_lichtrinh.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        find_LICHTRINH.setText("Tim kiem");
        find_LICHTRINH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_LICHTRINHActionPerformed(evt);
            }
        });

        jLabel6.setText("GIA TU");

        jLabel7.setText("DEN");

        txt_gia1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_gia1KeyTyped(evt);
            }
        });

        txt_gia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_gia2KeyTyped(evt);
            }
        });

        tbl_cttour.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NGAY XUAT PHAT"
            }
        ));
        jScrollPane3.setViewportView(tbl_cttour);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_gia1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txt_gia2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(find_DSTOUR)
                .addGap(76, 76, 76))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txt_MT, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(txt_lichtrinh, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_sl, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(find_LICHTRINH)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton2)
                        .addGap(185, 185, 185)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1)
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(find_DSTOUR)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txt_gia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_gia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_MT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jLabel3)
                    .addComponent(txt_sl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_lichtrinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(find_LICHTRINH))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
            String orc = "EXEC DATTOUR @maKH='MKH01', @maTour=?, @sl = ?";
            PreparedStatement pst = con.prepareStatement(orc);
            pst.setString(1, txt_MT.getText());
            pst.setString(2, txt_sl.getText());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Vui lòng kiểm tra lịch trình và chờ xác thực");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_slKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_slKeyTyped

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_slKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        QUANLY_KHACHHANG MY = new QUANLY_KHACHHANG();
        MY.show();          // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void find_DSTOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_DSTOURActionPerformed
        if (txt_timkiem.getText().isEmpty() & txt_gia1.getText().isEmpty() & txt_gia2.getText().isEmpty()) {
            DefaultTableModel tbModel = (DefaultTableModel) tblDS.getModel();
            tbModel.setRowCount(0);
            show_SP();
            return;
        }
        if (txt_gia1.getText().isEmpty() & txt_gia2.getText().isEmpty()) {
            DefaultTableModel tbModel = (DefaultTableModel) tblDS.getModel();
            tbModel.setRowCount(0);
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
                System.out.println("Connected to the database");
                String query = "select * from DS_TOUR where TEN_TOUR LIKE ? ";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, txt_timkiem.getText());
                ResultSet rs = pst.executeQuery();
                DefaultTableModel tblmodel = (DefaultTableModel) tblDS.getModel();
                while (rs.next()) {
                    tblmodel.addRow(new String[]{rs.getString(1), rs.getString(2), String.valueOf(rs.getInt(3))});
                }
            } catch (Exception E) {
                System.out.println("Connection failed");
                E.printStackTrace();
            }
            return;
        }
        if (txt_timkiem.getText().isEmpty()) {
            DefaultTableModel tbModel = (DefaultTableModel) tblDS.getModel();
            tbModel.setRowCount(0);
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
                System.out.println("Connected to the database2");
                String query = "select * from DS_TOUR where GIA BETWEEN ? AND ?";
                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, txt_gia1.getText());
                pst.setString(2, txt_gia2.getText());
                ResultSet rs = pst.executeQuery();
                DefaultTableModel tblmodel = (DefaultTableModel) tblDS.getModel();
                while (rs.next()) {
                    tblmodel.addRow(new String[]{rs.getString(1), rs.getString(2), String.valueOf(rs.getInt(3))});
                }
            } catch (Exception E) {
                System.out.println("Connection failed");
                E.printStackTrace();
            }
            return;
        }
        DefaultTableModel tbModel = (DefaultTableModel) tblDS.getModel();
        tbModel.setRowCount(0);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
            System.out.println("Connected to the database2");
            String query = "select * from DS_TOUR where TEN_TOUR = ? AND GIA BETWEEN ? AND ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, txt_timkiem.getText());
            pst.setString(2, txt_gia1.getText());
            pst.setString(3, txt_gia2.getText());
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tblmodel = (DefaultTableModel) tblDS.getModel();
            while (rs.next()) {
                tblmodel.addRow(new String[]{rs.getString(1), rs.getString(2), String.valueOf(rs.getInt(3))});
            }
        } catch (Exception E) {
            System.out.println("Connection failed");
            E.printStackTrace();
        }

    }//GEN-LAST:event_find_DSTOURActionPerformed

    private void find_LICHTRINHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_LICHTRINHActionPerformed
        DefaultTableModel tbModel = (DefaultTableModel) tbl_lichtrinh.getModel();
        tbModel.setRowCount(0);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
            System.out.println("Connected to the database");
            String query = "select * from LICHTRINH_TOUR WHERE MA_TOUR = ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, txt_lichtrinh.getText());
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tblmodel = (DefaultTableModel) tbl_lichtrinh.getModel();
            while (rs.next()) {
                tblmodel.addRow(new String[]{rs.getString(1), rs.getString(2)});
            }

        } catch (Exception E) {
            System.out.println("Connection failed");
            E.printStackTrace();
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=demo_CSDL1;user=yun;password=123");
            System.out.println("Connected to the database");
            String query = "select NGAYXUATPHAT from CHITIET_TOUR WHERE MA_TOUR = ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, txt_lichtrinh.getText());
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tbModel2 = (DefaultTableModel) tbl_cttour.getModel();
            tbModel2.setRowCount(0);
            while (rs.next()) {
                tbModel2.addRow(new String[]{rs.getString(1)});
            }

        } catch (Exception E) {
            System.out.println("Connection failed");
            E.printStackTrace();
        }
    }//GEN-LAST:event_find_LICHTRINHActionPerformed

    private void txt_gia1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_gia1KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_gia1KeyTyped

    private void txt_gia2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_gia2KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_gia2KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DS_Tour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DS_Tour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DS_Tour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DS_Tour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DS_Tour().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton find_DSTOUR;
    private javax.swing.JButton find_LICHTRINH;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblDS;
    private javax.swing.JTable tbl_cttour;
    private javax.swing.JTable tbl_lichtrinh;
    private javax.swing.JTextField txt_MT;
    private javax.swing.JTextField txt_gia1;
    private javax.swing.JTextField txt_gia2;
    private javax.swing.JTextField txt_lichtrinh;
    private javax.swing.JTextField txt_sl;
    private javax.swing.JTextField txt_timkiem;
    // End of variables declaration//GEN-END:variables
}
